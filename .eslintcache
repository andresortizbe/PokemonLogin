[{"E:\\Academlo\\React\\App\\login\\PokemonLogin\\src\\index.js":"1","E:\\Academlo\\React\\App\\login\\PokemonLogin\\src\\reportWebVitals.js":"2","E:\\Academlo\\React\\App\\login\\PokemonLogin\\src\\components\\SignUp.jsx":"3","E:\\Academlo\\React\\App\\login\\PokemonLogin\\src\\components\\allPoke\\pokemonDetail.jsx":"4","E:\\Academlo\\React\\App\\login\\PokemonLogin\\src\\components\\pokeCard\\pokeCard.js":"5","E:\\Academlo\\React\\App\\login\\PokemonLogin\\src\\components\\pokemonDetail\\pokemonDetail.js":"6","E:\\Academlo\\React\\App\\login\\PokemonLogin\\src\\components\\allPoke\\allPoke.jsx":"7","E:\\Academlo\\React\\App\\login\\PokemonLogin\\src\\components\\primaryCol\\aboutCol.js":"8","E:\\Academlo\\React\\App\\login\\PokemonLogin\\src\\firebase\\config.js":"9","E:\\Academlo\\React\\App\\login\\PokemonLogin\\src\\components\\main\\main.js":"10","E:\\Academlo\\React\\App\\login\\PokemonLogin\\src\\components\\primaryCol\\primary-col.js":"11","E:\\Academlo\\React\\App\\login\\PokemonLogin\\src\\components\\notLogged\\notLogged.jsx":"12","E:\\Academlo\\React\\App\\login\\PokemonLogin\\src\\components\\pokeCard\\pagination.js":"13","E:\\Academlo\\React\\App\\login\\PokemonLogin\\src\\App.js":"14","E:\\Academlo\\React\\App\\login\\PokemonLogin\\src\\components\\PrivateRoute.jsx":"15","E:\\Academlo\\React\\App\\login\\PokemonLogin\\src\\components\\SignIn.jsx":"16","E:\\Academlo\\React\\App\\login\\PokemonLogin\\src\\components\\allPoke\\Page.jsx":"17"},{"size":587,"mtime":1606449437000,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1606449437000,"results":"20","hashOfConfig":"19"},{"size":4041,"mtime":1607455485296,"results":"21","hashOfConfig":"19"},{"size":2746,"mtime":1607454601663,"results":"22","hashOfConfig":"19"},{"size":1805,"mtime":1607454054129,"results":"23","hashOfConfig":"19"},{"size":3821,"mtime":1607454692538,"results":"24","hashOfConfig":"19"},{"size":2816,"mtime":1607455151645,"results":"25","hashOfConfig":"19"},{"size":856,"mtime":1607451218353,"results":"26","hashOfConfig":"19"},{"size":508,"mtime":1606863499093,"results":"27","hashOfConfig":"19"},{"size":2514,"mtime":1607443497921,"results":"28","hashOfConfig":"19"},{"size":5127,"mtime":1607452019425,"results":"29","hashOfConfig":"19"},{"size":847,"mtime":1607443676436,"results":"30","hashOfConfig":"19"},{"size":424,"mtime":1607443719574,"results":"31","hashOfConfig":"19"},{"size":1176,"mtime":1607455361341,"results":"32","hashOfConfig":"19"},{"size":339,"mtime":1607257237180,"results":"33","hashOfConfig":"19"},{"size":4105,"mtime":1607455441021,"results":"34","hashOfConfig":"19"},{"size":435,"mtime":1607455295602,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"y7irog",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"65"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Academlo\\React\\App\\login\\PokemonLogin\\src\\index.js",[],["81","82"],"E:\\Academlo\\React\\App\\login\\PokemonLogin\\src\\reportWebVitals.js",[],["83","84"],"E:\\Academlo\\React\\App\\login\\PokemonLogin\\src\\components\\SignUp.jsx",[],"E:\\Academlo\\React\\App\\login\\PokemonLogin\\src\\components\\allPoke\\pokemonDetail.jsx",["85","86"],"import React, { useState, useEffect } from \"react\";\r\nimport './styles.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nexport default function PokemonDetail (props) {\r\n    const [pokemonDetails, setPokemonDetails] = useState([]);\r\n    const [pokemonStats, setPokemonStats] = useState([]);\r\n    const [pokeUrl,setPokeUrl]=useState(\"\");\r\n\r\n\r\n    useEffect(async () =>  \r\n    { \r\n        let url=\"https://pokeapi.co/api/v2/pokemon/\"+props.pokemonName;\r\n        let response = await fetch(url);\r\n        let data = await response.json();\r\n        setPokemonDetails(data.stats);\r\n        \r\n        let response2 = await fetch(url);\r\n        data=await response2.json();\r\n        setPokemonStats(data.types);\r\n        generarUrl(props.pokemonName.toLowerCase());                \r\n    }, []);\r\n   function generarUrl(name)\r\n    {\r\n        let gifUrl='../img/pokeGif/'+name+'.gif';\r\n        setPokeUrl(gifUrl);\r\n    }\r\n    return (\r\n        \r\n        \r\n            <div className=\"detailsCont\"><h2 className=\"detailTitle\">{\"  \"+props.pokemonName.toUpperCase()}</h2>.\r\n                <div className=\"img-cont\">\r\n                <img className=\"img4 zoom\" src={pokeUrl} alt={props.pokemonName} />\r\n                <div className=\"typeContainer\">\r\n                        {\r\n                          pokemonStats.map((poke,index)=>{\r\n                           return( <div className=\"divider\" key={index}><div \r\n                            className={`typePoke ${poke.type.name} && 'poke.type.name'}`}></div>\r\n                                      <h3 className=\"typeTitle\">{poke.type.name.toUpperCase()}</h3>\r\n                                      </div>)\r\n                            })      \r\n\r\n                            \r\n                        }\r\n                </div>\r\n                    <div className=\"statsContainer\">\r\n                        {\r\n                          pokemonDetails.map((poke,index)=>{\r\n                           return( <div className=\"statsContainer\" key={index} >\r\n                                        <h6>{poke.stat.name.toUpperCase()}</h6>\r\n                                        <progress  id=\"poke.base_stat\" \r\n                                                  max=\"100\" \r\n                                                  value={poke.base_stat}> \r\n                                                  \"70%\" </progress>\r\n                                                  <h6 className=\"valueBar\">{poke.base_stat}</h6>\r\n                                    </div>    \r\n                                 )\r\n                            \r\n                            })      \r\n\r\n\r\n                        }\r\n\r\n\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n","E:\\Academlo\\React\\App\\login\\PokemonLogin\\src\\components\\pokeCard\\pokeCard.js",[],"E:\\Academlo\\React\\App\\login\\PokemonLogin\\src\\components\\pokemonDetail\\pokemonDetail.js",["87","88"],"import React,{useState,useEffect} from 'react';\r\nimport './stylesDet.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nexport default function PokemonDetails(props){\r\n    let [pokemonDetails, setPokemonDetails] = useState([]);\r\n    let [pokemonStats, setPokemonStats] = useState([]);\r\n    let [gifExist, setGifExist] = useState(false);\r\n    let [urlExist, setUrlExist] = useState(false);\r\n    let [url,setUrl]=useState(\"\");    \r\n    \r\n\r\n    useEffect( () => \r\n            {fetch(props.url)\r\n                .then(response => response.json())\r\n                .then(data => setPokemonDetails(data.stats ))\r\n                .catch(error => {\r\n                    console.log(error);\r\n                })\r\n                fetch(props.url)\r\n                .then(response => response.json())\r\n                .then(data => setPokemonStats(data.types))\r\n                .catch(error => {\r\n                    console.log(error);\r\n                })\r\n                fetch('/img/pokeGif/'+props.name+'.gif')\r\n                .then(response => response.blob())\r\n                .then(data => {\r\n                    console.log(data.type)\r\n                    if(data.type === 'image/gif') {\r\n                        setGifExist(true);\r\n                    }\r\n\r\n                })\r\n    \r\n                fetch(props.url)\r\n                .then(response => response.blob())\r\n                .then(data => {\r\n                    console.log(data.type)\r\n                    if(data.type === 'image/gif') {\r\n                        setUrlExist(true);\r\n                    }\r\n                    // const image = URL.createObjectURL(data)\r\n                    // console.log(image)\r\n                })\r\n                .catch(error => {\r\n                    \r\n                    this.setState({urlExist:false})\r\n                })\r\n\r\n                let gifUrl='./img/pokeGif/'+props.name+'.gif';\r\n                let url = gifExist ? gifUrl :props.img; \r\n                setUrl(url);\r\n            }, []);\r\n\r\n \r\n        \r\n    return (\r\n\r\n            <div className=\"details-cont\"><h2 className=\"detailTitle\">{props.code+\"  \"+props.name.toUpperCase()}</h2>.\r\n                <div className=\"img-cont\">\r\n                <img className=\"img4 zoom\" src={url} alt={props.name} />\r\n                <div className=\"typeContainer\">\r\n                        {\r\n                          pokemonStats.map((poke, index)=>{\r\n                           return( <div className=\"divider\" key={index}><div \r\n                            className={`typePoke ${poke.type.name} && 'poke.type.name'}`}></div>\r\n                                      <h3 className=\"typeTitle\">{poke.type.name.toUpperCase()}</h3>\r\n                                      </div>)\r\n                            })      \r\n\r\n                            \r\n                        }\r\n                </div>\r\n                    <div className=\"statsContainer\">\r\n                        {\r\n                          pokemonDetails.map((poke,index)=>{\r\n                           return( <div className=\"statsContainer\" key={index}>\r\n                                        <h6>{poke.stat.name.toUpperCase()}</h6>\r\n                                        <progress  id=\"poke.base_stat\" \r\n                                                  max=\"100\" \r\n                                                  value={poke.base_stat}> \r\n                                                  \"70%\" </progress>\r\n                                                  <h6 className=\"valueBar\">{poke.base_stat}</h6>\r\n                                    </div>    \r\n                                 )\r\n                            \r\n                            })      \r\n\r\n\r\n                        }\r\n\r\n\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    \r\n}\r\n","E:\\Academlo\\React\\App\\login\\PokemonLogin\\src\\components\\allPoke\\allPoke.jsx",["89","90"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Page from \"./Page\";\r\nimport \"./pokeStyle.css\";\r\n\r\nexport default function AllPoke(props) {\r\n  const [pokemones, setPokemones] = useState([]);\r\n  const [pokePage, setPokePage] = useState(1);\r\n  const [pokePagination, setPokePagination] = useState([\r\n    1,\r\n    2,\r\n    3,\r\n    4,\r\n    5,\r\n    6,\r\n    7,\r\n    8,\r\n    9,\r\n    10,\r\n  ]);\r\n\r\n  let location = useLocation(); //Nos regresa un objeto con la ruta en la que nos encontramos actualmente\r\n\r\n  useEffect(() => {\r\n    console.log(location);\r\n    const getPokemons = async () => {\r\n      let results = await axios.get(\r\n        \"https://pokeapi.co/api/v2/pokemon?limit=24&offset=0\"\r\n      );\r\n      let data = results.data.results;\r\n      setPokemones(data);\r\n    };\r\n\r\n    getPokemons();\r\n  }, []);\r\n\r\n  function changePage(currentPage) {\r\n    setPokePage(currentPage);\r\n    paginationChange(currentPage);\r\n  }\r\n\r\n  function paginationChange(currentPage) {\r\n    let pages = [];\r\n\r\n    let sup = currentPage + 4;\r\n    let inf = currentPage - 5;\r\n\r\n    if (currentPage > 5) {\r\n      for (let i = inf; i <= sup; i++) {\r\n        pages.push(i);\r\n      }\r\n    } else if (currentPage <= 5) {\r\n      pages = [];\r\n      pages = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n    }\r\n\r\n    setPokePagination(pages);\r\n  }\r\n\r\n  function fetchPage(requestPage) {\r\n    const url = \"https://pokeapi.co/api/v2/pokemon\";\r\n    fetch(`${url}?limit=24&offset=${(requestPage - 1) * 24}`)\r\n      .then((response) => response.json())\r\n      .then((data) => setPokemones(data.results))\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    changePage(requestPage);\r\n  }\r\n\r\n  return (\r\n    <div className=\"izquierda\">\r\n      <img className=\"title\" src=\"img/back/pokBack.png\" alt=\"title\" />\r\n      <div className=\"pokemonContainerG\">\r\n        {pokemones.map((pokemon, index) => {\r\n          let url = \"./img/pokeGif/\" + pokemon.name + \".gif\";\r\n\r\n          return (\r\n            <div className=\"pokeGrid\">\r\n              <Link\r\n                key={pokemon.name}\r\n                to={{\r\n                  pathname: `/pokemones/${pokemon.name}`,\r\n                  state: { isLogged: true },\r\n                }}\r\n              >\r\n                <div className=\"zoom\">\r\n                  <img\r\n                    className=\"title\"\r\n                    src={url}\r\n                    alt=\"title\"\r\n                    onClick={() => props.pokemonData(pokemon.name)}\r\n                  />\r\n                </div>\r\n              </Link>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"paginationI\">\r\n        <Page fetchPageFn={fetchPage} pokePagination={pokePagination} />\r\n      </div>\r\n    </div>\r\n  );\r\n}",["91","92"],"E:\\Academlo\\React\\App\\login\\PokemonLogin\\src\\components\\primaryCol\\aboutCol.js",[],["93","94"],"E:\\Academlo\\React\\App\\login\\PokemonLogin\\src\\firebase\\config.js",[],["95","96"],"E:\\Academlo\\React\\App\\login\\PokemonLogin\\src\\components\\main\\main.js",["97"],"import React, {useState,useEffect} from \"react\";\r\nimport \"./styles.css\";\r\nimport {Route, Switch, useHistory} from \"react-router-dom\";\r\nimport firebase, {auth} from \"../../firebase/config\";\r\nimport PrimaryCol from \"../primaryCol/primary-col\"\r\nimport AboutCol from \"../primaryCol/aboutCol\"\r\nimport SignUp from \"../SignUp\";\r\nimport SignIn from \"../SignIn\";\r\nimport PrivateRoute from \"../PrivateRoute\";\r\nimport AllPoke from \"../allPoke/allPoke\";\r\nimport PokemonDetail from \"../allPoke/pokemonDetail\"\r\n\r\n\r\n\r\n\r\n\r\nfunction Main (props) {\r\n  \r\n  let history = useHistory();\r\n  let provider = new firebase.auth.GoogleAuthProvider();\r\n  let facebookProvider = new firebase.auth.FacebookAuthProvider();\r\n  let [user, setUser] = useState({});\r\n  let [isLogged, setIsLogged] = useState(false);\r\n  let [pokemonData,setPokemonData]=useState([]);\r\n  \r\n    \r\n\r\n  const signInGoogle = () => {\r\n    auth.signInWithPopup(provider).then(result => {\r\n      let user = result.user;\r\n      setUser(user);\r\n      setIsLogged(true);\r\n      history.push('/pokeDex');\r\n    }).catch(error => {\r\n      setIsLogged(false);\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  const signInFacebook = () => {\r\n    auth.signInWithPopup(facebookProvider).then(result => {\r\n     \r\n      let user = result.user;\r\n      setUser(user);\r\n      setIsLogged(true);\r\n      history.push('/pokeDex');\r\n      console.log(user);\r\n    }).catch(error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n  \r\n  \r\n  return (\r\n\r\n    <div className=\"t-main\">\r\n    {\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n            <SignIn signInGoogle={signInGoogle} signInFacebook={signInFacebook} setIsLogged={setIsLogged}/>\r\n        </Route>\r\n        \r\n        <Route path=\"/Registro\" exact>\r\n          <SignUp />\r\n        </Route>\r\n        <PrivateRoute path=\"/pokeDex\" logged={isLogged} user={user}>\r\n                      <PrimaryCol/>                    \r\n        </PrivateRoute>\r\n        <PrivateRoute path=\"/about\" logged={isLogged} user={user}>\r\n                      <AboutCol/>\r\n                      \r\n        </PrivateRoute>\r\n        <PrivateRoute path=\"/todosPoke\" logged={isLogged} user={user}>\r\n                      <AllPoke pokemonData={setPokemonData}/>\r\n        </PrivateRoute>\r\n        \r\n        <PrivateRoute path=\"/pokemones/:pokemonName\" logged={isLogged} user={user}>\r\n                      <PokemonDetail pokemonName={pokemonData}/>      \r\n        </PrivateRoute> \r\n      </Switch>\r\n    }\r\n  </div>\r\n        );\r\n}\r\n\r\nexport default Main;\r\n  \r\n  \r\n  \r\n  \r\n  \r\n",["98","99"],"E:\\Academlo\\React\\App\\login\\PokemonLogin\\src\\components\\primaryCol\\primary-col.js",["100","101","102","103","104","105","106","107"],"import React,{useEffect,useState} from 'react';\r\nimport PokeCard from '../pokeCard/pokeCard';\r\nimport Pagination from '../pokeCard/pagination'\r\nimport './styles.css';\r\n\r\n\r\nexport default function PrimaryCol () \r\n{\r\n    \r\n    let[pokemones,setPokemones]=useState([]);\r\n    let [pokemonPerPage,setPokemonPerPage]=useState(10);\r\n    let [pokePage,setPokePage]=useState(1);\r\n    let[pokePagination,setPokePagination]=useState([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]); \r\n    let[pokeData,setPokeData]=useState([]);\r\n    let[details,setDetails]=useState([]);\r\n    let[urlExist,setUrlExist]=useState(false);\r\n    let [urlAltPok,setUrlAltPok]=useState(\"\");        \r\n        \r\n    \r\n\r\n    useEffect( () => \r\n        {\r\n        const limit = pokemonPerPage;\r\n        const url = 'https://pokeapi.co/api/v2/pokemon';\r\n        //Consumir la API de pokeapi\r\n        fetch(`${url}?limit=${limit}`)\r\n            .then(response => response.json())\r\n            .then(data => setPokemones( data.results))\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n           cargarTodo();\r\n          }, []);\r\n\r\n    function cargarTodo()\r\n     {\r\n         console.log(\"cargando esta monda\");\r\n        fetch(\"https://pokeapi.co/api/v2/pokemon/?offset=0&limit=1050\")\r\n            .then(response => response.json())\r\n            .then(dato => setPokeData(dato.results.url))\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n\r\n        pokemones.map  ((pokemon,index)=>\r\n        {\r\n            fetch(pokemon.url)\r\n            .then(response => response.json())\r\n            .then(dato => setDetails(dato.types[0].type.name))\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n            return true;\r\n        })\r\n        \r\n        }\r\n     \r\n     \r\n    \r\nfunction changePage (currentPage)  \r\n    {\r\n       \r\n        setPokePage(currentPage);\r\n        paginationChange(currentPage);\r\n       \r\n    }\r\n    function paginationChange(currentPage) {\r\n        \r\n        let pages = [];\r\n        \r\n        let sup=currentPage+4;\r\n        let inf=currentPage-5;\r\n        \r\n        if (currentPage>5)\r\n            {\r\n              for (let i = inf; i <= sup; i++) {\r\n                   \r\n                    pages.push(i);\r\n                }  \r\n\r\n            }\r\n        else if(currentPage<=5)\r\n                {\r\n                  pages= [];\r\n                  pages=[1,2,3,4,5,6,7,8,9,10]; \r\n                }\r\n        \r\n         \r\n        setPokePagination(pages);\r\n\r\n    }\r\n\r\n    function genUrl(indexPoke, pokePage) {\r\n\r\n        let pokemonImg = \"\";\r\n        let code = \"\";\r\n        let aux, aux2, aux3;\r\n        if (pokePage < 10) {\r\n            if (indexPoke < 9) {\r\n                aux = pokePage - 1;\r\n                aux = aux * 10;\r\n                aux2 = indexPoke + 1;\r\n                aux3 = aux + aux2;\r\n                if (pokePage === 1) {\r\n                    code = \"00\" + aux3;\r\n                }\r\n                else {\r\n                    code = \"0\" + aux3;\r\n    \r\n                }\r\n    \r\n                \r\n                pokemonImg = `https://assets.pokemon.com/assets/cms2/img/pokedex/full/${code}.png`\r\n            }\r\n            else {\r\n                code = ((pokePage - 1) * 10) + (indexPoke + 1);\r\n               \r\n                pokemonImg = `https://assets.pokemon.com/assets/cms2/img/pokedex/full/0${code}.png`\r\n            }\r\n        \r\n        }\r\n        if (pokePage > 9) {\r\n    \r\n            aux = pokePage - 1;\r\n            aux = aux * 10;\r\n            aux2 = indexPoke + 1;\r\n            aux3 = aux + aux2;\r\n            if (aux3 < 100) {\r\n                code = \"0\" + aux3;\r\n            }\r\n            else {\r\n                code = aux3;\r\n            }\r\n            pokemonImg = `https://assets.pokemon.com/assets/cms2/img/pokedex/full/${code}.png`\r\n        }\r\n    \r\n        return pokemonImg;\r\n    }\r\n\r\nfunction fetchPage(requestPage)  \r\n{\r\n        //1. Completar el método para poder obtener los pokemones dependiendo de la página solicitada\r\n        const limit = pokemonPerPage;\r\n        const url = 'https://pokeapi.co/api/v2/pokemon';\r\n        fetch(`${url}?limit=${limit}&offset=${(requestPage - 1) * 10}`)\r\n            .then(response => response.json())\r\n            .then(data => setPokemones(data.results ))\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n            \r\n    changePage(requestPage);\r\n        \r\n    }\r\n        \r\n        return (\r\n            \r\n            <div className=\"t-col-container\">\r\n                \r\n                {\r\n                      \r\n                    pokemones.map((pokemon, index) => {\r\n                        \r\n                        return (<PokeCard key={index + 1} name={pokemon.name} page={pokePage} \r\n                            img={ genUrl(index, pokePage)} \r\n                            url={pokemon.url}/>)\r\n                    })\r\n                }\r\n                <div className=\"pagination\"><Pagination fetchPageFn={fetchPage} pokePagination={pokePagination} /></div>\r\n\r\n            </div>\r\n            \r\n        )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","E:\\Academlo\\React\\App\\login\\PokemonLogin\\src\\components\\notLogged\\notLogged.jsx",["108","109"],"E:\\Academlo\\React\\App\\login\\PokemonLogin\\src\\components\\pokeCard\\pagination.js",[],"E:\\Academlo\\React\\App\\login\\PokemonLogin\\src\\App.js",[],"E:\\Academlo\\React\\App\\login\\PokemonLogin\\src\\components\\PrivateRoute.jsx",[],"E:\\Academlo\\React\\App\\login\\PokemonLogin\\src\\components\\SignIn.jsx",[],"E:\\Academlo\\React\\App\\login\\PokemonLogin\\src\\components\\allPoke\\Page.jsx",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"110","replacedBy":"114"},{"ruleId":"112","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":12,"column":15,"nodeType":"118","endLine":23,"endColumn":6},{"ruleId":"116","severity":1,"message":"119","line":23,"column":8,"nodeType":"120","endLine":23,"endColumn":10,"suggestions":"121"},{"ruleId":"122","severity":1,"message":"123","line":10,"column":10,"nodeType":"124","messageId":"125","endLine":10,"endColumn":18},{"ruleId":"116","severity":1,"message":"126","line":55,"column":16,"nodeType":"120","endLine":55,"endColumn":18,"suggestions":"127"},{"ruleId":"122","severity":1,"message":"128","line":9,"column":10,"nodeType":"124","messageId":"125","endLine":9,"endColumn":18},{"ruleId":"116","severity":1,"message":"129","line":36,"column":6,"nodeType":"120","endLine":36,"endColumn":8,"suggestions":"130"},{"ruleId":"110","replacedBy":"131"},{"ruleId":"112","replacedBy":"132"},{"ruleId":"110","replacedBy":"133"},{"ruleId":"112","replacedBy":"134"},{"ruleId":"110","replacedBy":"135"},{"ruleId":"112","replacedBy":"136"},{"ruleId":"122","severity":1,"message":"137","line":1,"column":25,"nodeType":"124","messageId":"125","endLine":1,"endColumn":34},{"ruleId":"110","replacedBy":"138"},{"ruleId":"112","replacedBy":"139"},{"ruleId":"122","severity":1,"message":"140","line":11,"column":25,"nodeType":"124","messageId":"125","endLine":11,"endColumn":42},{"ruleId":"122","severity":1,"message":"141","line":14,"column":9,"nodeType":"124","messageId":"125","endLine":14,"endColumn":17},{"ruleId":"122","severity":1,"message":"142","line":15,"column":9,"nodeType":"124","messageId":"125","endLine":15,"endColumn":16},{"ruleId":"122","severity":1,"message":"123","line":16,"column":9,"nodeType":"124","messageId":"125","endLine":16,"endColumn":17},{"ruleId":"122","severity":1,"message":"143","line":16,"column":18,"nodeType":"124","messageId":"125","endLine":16,"endColumn":29},{"ruleId":"122","severity":1,"message":"144","line":17,"column":10,"nodeType":"124","messageId":"125","endLine":17,"endColumn":19},{"ruleId":"122","severity":1,"message":"145","line":17,"column":20,"nodeType":"124","messageId":"125","endLine":17,"endColumn":32},{"ruleId":"116","severity":1,"message":"146","line":33,"column":14,"nodeType":"120","endLine":33,"endColumn":16,"suggestions":"147"},{"ruleId":"122","severity":1,"message":"148","line":2,"column":16,"nodeType":"124","messageId":"125","endLine":2,"endColumn":24},{"ruleId":"122","severity":1,"message":"137","line":2,"column":26,"nodeType":"124","messageId":"125","endLine":2,"endColumn":35},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],["149"],["150"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'props.pokemonName'. Either include it or remove the dependency array.","ArrayExpression",["151"],"no-unused-vars","'urlExist' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'gifExist', 'props.img', 'props.name', and 'props.url'. Either include them or remove the dependency array.",["152"],"'pokePage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'location'. Either include it or remove the dependency array.",["153"],["149"],["150"],["149"],["150"],["149"],["150"],"'useEffect' is defined but never used.",["149"],["150"],"'setPokemonPerPage' is assigned a value but never used.","'pokeData' is assigned a value but never used.","'details' is assigned a value but never used.","'setUrlExist' is assigned a value but never used.","'urlAltPok' is assigned a value but never used.","'setUrlAltPok' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'cargarTodo' and 'pokemonPerPage'. Either include them or remove the dependency array.",["154"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},"Update the dependencies array to be: [props.pokemonName]",{"range":"163","text":"164"},"Update the dependencies array to be: [gifExist, props.img, props.name, props.url]",{"range":"165","text":"166"},"Update the dependencies array to be: [location]",{"range":"167","text":"168"},"Update the dependencies array to be: [cargarTodo, pokemonPerPage]",{"range":"169","text":"170"},[791,793],"[props.pokemonName]",[1997,1999],"[gifExist, props.img, props.name, props.url]",[892,894],"[location]",[1104,1106],"[cargarTodo, pokemonPerPage]"]